version: "3.8"

services:
  ##########################
  # Zookeeper container
  ##########################
  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    restart: always
    hostname: zookeeper
    image: zookeeper:latest
    environment:
      ZOO_MY_ID: 1
  
  ##########################
  # Kafka
  ##########################
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    depends_on:
      - zookeeper

  ##########################
  # Divolte container
  ##########################
  divolte:
    image: divolte/divolte-collector
    container_name: divolte
    environment:
      - DIVOLTE_KAFKA_BROKER_LIST=kafka:29092
    volumes:
      - ./conf/divolte/:/opt/divolte/divolte-collector/conf/
    ports:
      - 8290:8290
    depends_on:
      - kafka

  ##########################
  # App
  ##########################
  app:
    build: app/
    container_name: app
    ports:
      - 8091:8090

  ##########################
  # Kafdrop
  ##########################
  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - 9100:9100
    environment:
      SERVER_PORT: 9100
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"
      SERVER_SERVLET_CONTEXTPATH: "/"

  ######################################
  # DRUID / POSTGRESQL
  ######################################
  # postgres:
  #   image: postgres:latest
  #   container_name: postgres
  #   volumes:
  #     - metadata_data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_PASSWORD=FoolishPassword
  #     - POSTGRES_USER=druid
  #     - POSTGRES_DB=druid

  ######################################
  # DRUID
  ######################################

  druid:
    build: ./druid
    container_name: druid
    ports:
      # - 8888: HTTP (router)
      # - 8081: HTTP (coordinator)
      # - 8082: HTTP (broker)
      # - 8083: HTTP (historical)
      # - 8090: HTTP (overlord)
      # - 2181 2888 3888: ZooKeeper
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
      - "8888:8888"
      - "8090:8090"
    depends_on: 
      - zookeeper
      #- postgres

  ######################################
  # Superset container
  ######################################
  superset:
    image: amancevice/superset:edge
    container_name: superset
    ports:
      - 8088:8088